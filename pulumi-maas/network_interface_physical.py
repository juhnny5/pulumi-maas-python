# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['NetworkInterfacePhysicalArgs', 'NetworkInterfacePhysical']

@pulumi.input_type
class NetworkInterfacePhysicalArgs:
    def __init__(__self__, *,
                 mac_address: pulumi.Input[str],
                 machine: pulumi.Input[str],
                 mtu: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 vlan: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a NetworkInterfacePhysical resource.
        :param pulumi.Input[str] mac_address: The physical network interface MAC address.
        :param pulumi.Input[str] machine: The identifier (system ID, hostname, or FQDN) of the machine with the physical network interface.
        :param pulumi.Input[int] mtu: The MTU of the physical network interface. This argument is computed if it's not set.
        :param pulumi.Input[str] name: The physical network interface name. This argument is computed if it's not set.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] tags: A set of tag names to be assigned to the physical network interface. This argument is computed if it's not set.
        :param pulumi.Input[str] vlan: VLAN the physical network interface is connected to. Defaults to `untagged`.
        """
        pulumi.set(__self__, "mac_address", mac_address)
        pulumi.set(__self__, "machine", machine)
        if mtu is not None:
            pulumi.set(__self__, "mtu", mtu)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if vlan is not None:
            pulumi.set(__self__, "vlan", vlan)

    @property
    @pulumi.getter(name="macAddress")
    def mac_address(self) -> pulumi.Input[str]:
        """
        The physical network interface MAC address.
        """
        return pulumi.get(self, "mac_address")

    @mac_address.setter
    def mac_address(self, value: pulumi.Input[str]):
        pulumi.set(self, "mac_address", value)

    @property
    @pulumi.getter
    def machine(self) -> pulumi.Input[str]:
        """
        The identifier (system ID, hostname, or FQDN) of the machine with the physical network interface.
        """
        return pulumi.get(self, "machine")

    @machine.setter
    def machine(self, value: pulumi.Input[str]):
        pulumi.set(self, "machine", value)

    @property
    @pulumi.getter
    def mtu(self) -> Optional[pulumi.Input[int]]:
        """
        The MTU of the physical network interface. This argument is computed if it's not set.
        """
        return pulumi.get(self, "mtu")

    @mtu.setter
    def mtu(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "mtu", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The physical network interface name. This argument is computed if it's not set.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        A set of tag names to be assigned to the physical network interface. This argument is computed if it's not set.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "tags", value)

    @property
    @pulumi.getter
    def vlan(self) -> Optional[pulumi.Input[str]]:
        """
        VLAN the physical network interface is connected to. Defaults to `untagged`.
        """
        return pulumi.get(self, "vlan")

    @vlan.setter
    def vlan(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vlan", value)


@pulumi.input_type
class _NetworkInterfacePhysicalState:
    def __init__(__self__, *,
                 mac_address: Optional[pulumi.Input[str]] = None,
                 machine: Optional[pulumi.Input[str]] = None,
                 mtu: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 vlan: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering NetworkInterfacePhysical resources.
        :param pulumi.Input[str] mac_address: The physical network interface MAC address.
        :param pulumi.Input[str] machine: The identifier (system ID, hostname, or FQDN) of the machine with the physical network interface.
        :param pulumi.Input[int] mtu: The MTU of the physical network interface. This argument is computed if it's not set.
        :param pulumi.Input[str] name: The physical network interface name. This argument is computed if it's not set.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] tags: A set of tag names to be assigned to the physical network interface. This argument is computed if it's not set.
        :param pulumi.Input[str] vlan: VLAN the physical network interface is connected to. Defaults to `untagged`.
        """
        if mac_address is not None:
            pulumi.set(__self__, "mac_address", mac_address)
        if machine is not None:
            pulumi.set(__self__, "machine", machine)
        if mtu is not None:
            pulumi.set(__self__, "mtu", mtu)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if vlan is not None:
            pulumi.set(__self__, "vlan", vlan)

    @property
    @pulumi.getter(name="macAddress")
    def mac_address(self) -> Optional[pulumi.Input[str]]:
        """
        The physical network interface MAC address.
        """
        return pulumi.get(self, "mac_address")

    @mac_address.setter
    def mac_address(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "mac_address", value)

    @property
    @pulumi.getter
    def machine(self) -> Optional[pulumi.Input[str]]:
        """
        The identifier (system ID, hostname, or FQDN) of the machine with the physical network interface.
        """
        return pulumi.get(self, "machine")

    @machine.setter
    def machine(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "machine", value)

    @property
    @pulumi.getter
    def mtu(self) -> Optional[pulumi.Input[int]]:
        """
        The MTU of the physical network interface. This argument is computed if it's not set.
        """
        return pulumi.get(self, "mtu")

    @mtu.setter
    def mtu(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "mtu", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The physical network interface name. This argument is computed if it's not set.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        A set of tag names to be assigned to the physical network interface. This argument is computed if it's not set.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "tags", value)

    @property
    @pulumi.getter
    def vlan(self) -> Optional[pulumi.Input[str]]:
        """
        VLAN the physical network interface is connected to. Defaults to `untagged`.
        """
        return pulumi.get(self, "vlan")

    @vlan.setter
    def vlan(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vlan", value)


class NetworkInterfacePhysical(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 mac_address: Optional[pulumi.Input[str]] = None,
                 machine: Optional[pulumi.Input[str]] = None,
                 mtu: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 vlan: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Create a NetworkInterfacePhysical resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] mac_address: The physical network interface MAC address.
        :param pulumi.Input[str] machine: The identifier (system ID, hostname, or FQDN) of the machine with the physical network interface.
        :param pulumi.Input[int] mtu: The MTU of the physical network interface. This argument is computed if it's not set.
        :param pulumi.Input[str] name: The physical network interface name. This argument is computed if it's not set.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] tags: A set of tag names to be assigned to the physical network interface. This argument is computed if it's not set.
        :param pulumi.Input[str] vlan: VLAN the physical network interface is connected to. Defaults to `untagged`.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: NetworkInterfacePhysicalArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a NetworkInterfacePhysical resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param NetworkInterfacePhysicalArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(NetworkInterfacePhysicalArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 mac_address: Optional[pulumi.Input[str]] = None,
                 machine: Optional[pulumi.Input[str]] = None,
                 mtu: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 vlan: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = NetworkInterfacePhysicalArgs.__new__(NetworkInterfacePhysicalArgs)

            if mac_address is None and not opts.urn:
                raise TypeError("Missing required property 'mac_address'")
            __props__.__dict__["mac_address"] = mac_address
            if machine is None and not opts.urn:
                raise TypeError("Missing required property 'machine'")
            __props__.__dict__["machine"] = machine
            __props__.__dict__["mtu"] = mtu
            __props__.__dict__["name"] = name
            __props__.__dict__["tags"] = tags
            __props__.__dict__["vlan"] = vlan
        super(NetworkInterfacePhysical, __self__).__init__(
            'maas:index/networkInterfacePhysical:NetworkInterfacePhysical',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            mac_address: Optional[pulumi.Input[str]] = None,
            machine: Optional[pulumi.Input[str]] = None,
            mtu: Optional[pulumi.Input[int]] = None,
            name: Optional[pulumi.Input[str]] = None,
            tags: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            vlan: Optional[pulumi.Input[str]] = None) -> 'NetworkInterfacePhysical':
        """
        Get an existing NetworkInterfacePhysical resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] mac_address: The physical network interface MAC address.
        :param pulumi.Input[str] machine: The identifier (system ID, hostname, or FQDN) of the machine with the physical network interface.
        :param pulumi.Input[int] mtu: The MTU of the physical network interface. This argument is computed if it's not set.
        :param pulumi.Input[str] name: The physical network interface name. This argument is computed if it's not set.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] tags: A set of tag names to be assigned to the physical network interface. This argument is computed if it's not set.
        :param pulumi.Input[str] vlan: VLAN the physical network interface is connected to. Defaults to `untagged`.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _NetworkInterfacePhysicalState.__new__(_NetworkInterfacePhysicalState)

        __props__.__dict__["mac_address"] = mac_address
        __props__.__dict__["machine"] = machine
        __props__.__dict__["mtu"] = mtu
        __props__.__dict__["name"] = name
        __props__.__dict__["tags"] = tags
        __props__.__dict__["vlan"] = vlan
        return NetworkInterfacePhysical(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="macAddress")
    def mac_address(self) -> pulumi.Output[str]:
        """
        The physical network interface MAC address.
        """
        return pulumi.get(self, "mac_address")

    @property
    @pulumi.getter
    def machine(self) -> pulumi.Output[str]:
        """
        The identifier (system ID, hostname, or FQDN) of the machine with the physical network interface.
        """
        return pulumi.get(self, "machine")

    @property
    @pulumi.getter
    def mtu(self) -> pulumi.Output[int]:
        """
        The MTU of the physical network interface. This argument is computed if it's not set.
        """
        return pulumi.get(self, "mtu")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        The physical network interface name. This argument is computed if it's not set.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Sequence[str]]:
        """
        A set of tag names to be assigned to the physical network interface. This argument is computed if it's not set.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter
    def vlan(self) -> pulumi.Output[Optional[str]]:
        """
        VLAN the physical network interface is connected to. Defaults to `untagged`.
        """
        return pulumi.get(self, "vlan")

